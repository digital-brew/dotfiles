-- Made with 'mini.colors' module of https://github.com/echasnovski/mini.nvim

if vim.g.colors_name ~= nil then vim.cmd('highlight clear') end
vim.g.colors_name = "NeoSolarized2"

-- Highlight groups
local hi = vim.api.nvim_set_hl

hi(0, "@attribute", { link = "PreProc" })
hi(0, "@character.special", { link = "SpecialChar" })
hi(0, "@constant.builtin", { link = "Special" })
hi(0, "@constant.macro", { link = "Define" })
hi(0, "@function.builtin", { link = "Special" })
hi(0, "@function.call", { link = "@function" })
hi(0, "@function.macro", { link = "Macro" })
hi(0, "@keyword.conditional", { link = "Conditional" })
hi(0, "@keyword.function", { link = "Keyword" })
hi(0, "@keyword.operator", { link = "@operator" })
hi(0, "@keyword.return", { link = "@keyword" })
hi(0, "@lsp.type.comment", { link = "TSComment" })
hi(0, "@lsp.type.enum", { link = "@type" })
hi(0, "@lsp.type.enumMember", { link = "TSConstructor" })
hi(0, "@lsp.type.interface", { fg = "#048bda" })
hi(0, "@lsp.type.keyword", { link = "TSKeyword" })
hi(0, "@lsp.type.modifier", { fg = "#e90018" })
hi(0, "@lsp.type.namespace", { link = "TSNamespace" })
hi(0, "@lsp.type.parameter", { link = "TSParameter" })
hi(0, "@lsp.type.property", { link = "TSProperty" })
hi(0, "@lsp.type.variable", { fg = "#32a1ad" })
hi(0, "@lsp.typemod.function.defaultLibrary", { link = "TSFuncBuiltin" })
hi(0, "@lsp.typemod.macro.defaultLibrary", { link = "TSFuncBuiltin" })
hi(0, "@lsp.typemod.method.defaultLibrary", { link = "TSFuncBuiltin" })
hi(0, "@lsp.typemod.operator.injected", { link = "TSOperator" })
hi(0, "@lsp.typemod.string.injected", { link = "@string" })
hi(0, "@lsp.typemod.type.defaultLibrary", { fg = "#048bda" })
hi(0, "@lsp.typemod.variable.defaultLibrary", { link = "TSVariableBuiltin" })
hi(0, "@lsp.typemod.variable.injected", { link = "TSVariable" })
hi(0, "@markup.heading.1.delimiter.vimdoc", { nocombine = true, sp = "#839496", underdouble = true })
hi(0, "@markup.heading.1.markdown", { link = "markdownH1" })
hi(0, "@markup.heading.1.marker.markdown", { link = "markdownH1" })
hi(0, "@markup.heading.2.delimiter.vimdoc", { nocombine = true, sp = "#839496", underline = true })
hi(0, "@markup.heading.2.markdown", { link = "markdownH2" })
hi(0, "@markup.heading.2.marker.markdown", { link = "markdownH2" })
hi(0, "@markup.heading.3.markdown", { link = "markdownH3" })
hi(0, "@markup.heading.3.marker.markdown", { link = "markdownH3" })
hi(0, "@markup.heading.4.markdown", { link = "markdownH4" })
hi(0, "@markup.heading.4.marker.markdown", { link = "markdownH4" })
hi(0, "@markup.heading.5.markdown", { link = "markdownH5" })
hi(0, "@markup.heading.5.marker.markdown", { link = "markdownH5" })
hi(0, "@markup.heading.6.markdown", { link = "markdownH6" })
hi(0, "@markup.heading.6.marker.markdown", { link = "markdownH6" })
hi(0, "@markup.heading.markdown", { link = "markdownBold" })
hi(0, "@markup.italic.markdown_inline", { link = "markdownItalic" })
hi(0, "@markup.link.label.markdown_inline", { link = "markdownLinkText" })
hi(0, "@markup.list.markdown", { link = "markdownListMarker" })
hi(0, "@markup.quote.markdown", { link = "markdownBlockquote" })
hi(0, "@markup.strikethrough.markdown_inline", { strikethrough = true })
hi(0, "@markup.strong.markdown_inline", { link = "markdownBold" })
hi(0, "@method.call", { link = "@method" })
hi(0, "@parameter.reference", { link = "@parameter" })
hi(0, "@punctuation.bracket", { link = "Delimiter" })
hi(0, "@punctuation.delimiter", { link = "Delimiter" })
hi(0, "@punctuation.special", { link = "Delimiter" })
hi(0, "@punctuation.special.markdown", { bold = true, fg = "#d04500" })
hi(0, "@string.escape", { link = "SpecialChar" })
hi(0, "@string.regex", { link = "String" })
hi(0, "@string.special", { link = "SpecialChar" })
hi(0, "@tag", { link = "Label" })
hi(0, "@tag.attribute", { link = "@property" })
hi(0, "@tag.delimiter", { link = "Delimiter" })
hi(0, "@text.danger", { bg = "#dc322f", fg = "#32a1ad" })
hi(0, "@text.diff.add", { link = "DiffAdd" })
hi(0, "@text.diff.delete", { link = "DiffDelete" })
hi(0, "@text.emphasis", { italic = true })
hi(0, "@text.environment", { link = "Macro" })
hi(0, "@text.environment.name", { link = "Type" })
hi(0, "@text.literal", { link = "String" })
hi(0, "@text.literal.markdown_inline", { bg = "#002b36", fg = "#048bda" })
hi(0, "@text.math", { link = "Special" })
hi(0, "@text.note", { link = "SpecialComment" })
hi(0, "@text.reference", { fg = "#e10083" })
hi(0, "@text.strike", { strikethrough = true })
hi(0, "@text.strong", { bold = true })
hi(0, "@text.title", { link = "Title" })
hi(0, "@text.todo.checked", { fg = "#859900" })
hi(0, "@text.todo.unchecked", { fg = "#048bda" })
hi(0, "@text.underline", { underline = true })
hi(0, "@text.uri", { link = "Underlined" })
hi(0, "@text.warning", { bg = "#b58900" })
hi(0, "@type.builtin", { link = "Type" })
hi(0, "@type.definition", { link = "Typedef" })
hi(0, "@type.qualifier", { link = "Type" })
hi(0, "@variable", {})
hi(0, "@variable.builtin", { fg = "#e90018" })
hi(0, "ALEErrorSign", { link = "ErrorMsg" })
hi(0, "ALEWarningSign", { link = "WarningMsg" })
hi(0, "ActionPreviewBorder", { link = "SagaBorder" })
hi(0, "ActionPreviewNormal", { link = "SagaBorder" })
hi(0, "ActionPreviewTitle", { fg = "#e10083" })
hi(0, "Added", { ctermfg = 10, fg = "#8bffa8" })
hi(0, "AlphaButtons", { fg = "#e10083" })
hi(0, "AlphaFooter", { fg = "#e90018", italic = true })
hi(0, "AlphaHeader", { fg = "#e90018" })
hi(0, "AlphaHeaderLabel", { fg = "#ffe79d" })
hi(0, "AlphaShortcut", { fg = "#d04500" })
hi(0, "BlueSign", { fg = "#048bda" })
hi(0, "Bold", { bold = true })
hi(0, "Boolean", { fg = "#e10083" })
hi(0, "BufferCurrent", { bg = "#586e75", fg = "#32a1ad" })
hi(0, "BufferCurrentIndex", { bg = "#586e75", fg = "#ffe79d" })
hi(0, "BufferCurrentMod", { bg = "#586e75", fg = "#b58900" })
hi(0, "BufferCurrentSign", { bg = "#586e75", fg = "#b58900" })
hi(0, "BufferCurrentTarget", { bg = "#586e75", fg = "#e90018" })
hi(0, "BufferInactive", { bg = "#073642", fg = "#ffe79d" })
hi(0, "BufferInactiveIndex", { bg = "#073642", fg = "#ffe79d" })
hi(0, "BufferInactiveMod", { bg = "#073642", fg = "#e90018" })
hi(0, "BufferInactiveSign", { bg = "#073642", fg = "#048bda" })
hi(0, "BufferInactiveTarget", { bg = "#073642", fg = "#e90018" })
hi(0, "BufferLineIndicatorSelected", { link = "GreenSign" })
hi(0, "BufferTabpage", { bg = "#073642", fg = "#048bda" })
hi(0, "BufferTabpages", { bg = "#073642" })
hi(0, "BufferVisible", { bg = "#073642", fg = "#32a1ad" })
hi(0, "BufferVisibleIndex", { bg = "#073642", fg = "#b58900" })
hi(0, "BufferVisibleMod", { bg = "#073642", fg = "#e90018" })
hi(0, "BufferVisibleSign", { bg = "#073642", fg = "#859900" })
hi(0, "BufferVisibleTarget", { bg = "#073642", fg = "#e90018" })
hi(0, "CallHierarchyBorder", { link = "SagaBorder" })
hi(0, "CallHierarchyIcon", { fg = "#e10083" })
hi(0, "CallHierarchyNormal", { link = "SagaBorder" })
hi(0, "CallHierarchyTitle", { fg = "#e90018" })
hi(0, "Changed", { ctermfg = 14, fg = "#4effff" })
hi(0, "Character", { fg = "#859900" })
hi(0, "CmpDocumentation", { fg = "#32a1ad" })
hi(0, "CmpDocumentationBorder", { fg = "#003643" })
hi(0, "CmpItemAbbr", { fg = "#32a1ad" })
hi(0, "CmpItemAbbrDeprecated", { fg = "#41b1b3" })
hi(0, "CmpItemAbbrMatch", { bold = true, fg = "#859900" })
hi(0, "CmpItemAbbrMatchFuzzy", { bold = true, fg = "#859900" })
hi(0, "CmpItemKind", { fg = "#b58900" })
hi(0, "CmpItemKindClass", { fg = "#b58900" })
hi(0, "CmpItemKindColor", { fg = "#00a399" })
hi(0, "CmpItemKindConstant", { fg = "#048bda" })
hi(0, "CmpItemKindConstructor", { fg = "#859900" })
hi(0, "CmpItemKindDefault", { fg = "#00768f" })
hi(0, "CmpItemKindEnum", { fg = "#b58900" })
hi(0, "CmpItemKindEnumMember", { fg = "#e10083" })
hi(0, "CmpItemKindEvent", { fg = "#d04500" })
hi(0, "CmpItemKindField", { fg = "#859900" })
hi(0, "CmpItemKindFile", { fg = "#00a399" })
hi(0, "CmpItemKindFolder", { fg = "#00a399" })
hi(0, "CmpItemKindFunction", { fg = "#859900" })
hi(0, "CmpItemKindInterface", { fg = "#b58900" })
hi(0, "CmpItemKindKeyword", { fg = "#e90018" })
hi(0, "CmpItemKindMethod", { fg = "#859900" })
hi(0, "CmpItemKindModule", { fg = "#b58900" })
hi(0, "CmpItemKindOperator", { fg = "#d04500" })
hi(0, "CmpItemKindProperty", { fg = "#048bda" })
hi(0, "CmpItemKindReference", { fg = "#00a399" })
hi(0, "CmpItemKindSnippet", { fg = "#00a399" })
hi(0, "CmpItemKindStruct", { fg = "#b58900" })
hi(0, "CmpItemKindText", { fg = "#32a1ad" })
hi(0, "CmpItemKindTypeParameter", { fg = "#b58900" })
hi(0, "CmpItemKindUnit", { fg = "#e10083" })
hi(0, "CmpItemKindValue", { fg = "#e10083" })
hi(0, "CmpItemKindVariable", { fg = "#048bda" })
hi(0, "CmpItemMenu", { fg = "#32a1ad" })
hi(0, "CodeActionBorder", { link = "SagaBorder" })
hi(0, "CodeActionConceal", { fg = "#859900" })
hi(0, "CodeActionNormal", { link = "SagaBorder" })
hi(0, "CodeActionText", { fg = "#b58900" })
hi(0, "ColorColumn", { bg = "#073642" })
hi(0, "CommandMode", { link = "Identifier" })
hi(0, "Comment", { fg = "#00768f", italic = true })
hi(0, "Conceal", { fg = "#003643" })
hi(0, "Conditional", { fg = "#00a399", italic = true })
hi(0, "Constant", { fg = "#00a399" })
hi(0, "CurSearch", { link = "IncSearch" })
hi(0, "CurrentWord", { bg = "#859000", fg = "#002b36" })
hi(0, "Cursor", { bg = "#839496", fg = "#003643" })
hi(0, "CursorColumn", { link = "CursorLine" })
hi(0, "CursorIM", { bg = "#839496", fg = "#002b36" })
hi(0, "CursorLine", { bg = "#002b36" })
hi(0, "CursorLineNr", { fg = "#ffe79d" })
hi(0, "DashboardCenter", { fg = "#e10083" })
hi(0, "DashboardFooter", { fg = "#e90018", italic = true })
hi(0, "DashboardHeader", { fg = "#048bda" })
hi(0, "DashboardShortCut", { fg = "#665aff" })
hi(0, "Debug", { fg = "#d04500" })
hi(0, "Define", { fg = "#e10083", italic = true })
hi(0, "DefinitionBorder", { link = "SagaBorder" })
hi(0, "DefinitionNormal", { link = "Normal" })
hi(0, "DefinitionSearch", { link = "Search" })
hi(0, "Delimiter", { fg = "#32a1ad" })
hi(0, "DiagnosticBorder", { link = "SagaBorder" })
hi(0, "DiagnosticError", { link = "ErrorText" })
hi(0, "DiagnosticErrorBorder", { link = "SagaBorder" })
hi(0, "DiagnosticFloatingError", { link = "ErrorFloat" })
hi(0, "DiagnosticFloatingHint", { link = "HintFloat" })
hi(0, "DiagnosticFloatingInfo", { link = "InfoFloat" })
hi(0, "DiagnosticFloatingWarn", { link = "WarningFloat" })
hi(0, "DiagnosticHint", { link = "HintText" })
hi(0, "DiagnosticHintBorder", { link = "SagaBorder" })
hi(0, "DiagnosticInfo", { link = "InfoText" })
hi(0, "DiagnosticInfoBorder", { link = "SagaBorder" })
hi(0, "DiagnosticNormal", { link = "Normal" })
hi(0, "DiagnosticOk", { ctermfg = 10, fg = "#8bffa8" })
hi(0, "DiagnosticPos", { fg = "#00768f" })
hi(0, "DiagnosticSignError", { link = "RedSign" })
hi(0, "DiagnosticSignHiblue", { link = "GreenSign" })
hi(0, "DiagnosticSignInfo", { link = "BlueSign" })
hi(0, "DiagnosticSignWarn", { link = "YellowSign" })
hi(0, "DiagnosticSource", { link = "Normal" })
hi(0, "DiagnosticUnderlineError", { link = "ErrorText" })
hi(0, "DiagnosticUnderlineHint", { link = "HintText" })
hi(0, "DiagnosticUnderlineInfo", { link = "InfoText" })
hi(0, "DiagnosticUnderlineWarn", { link = "WarningText" })
hi(0, "DiagnosticVirtualTextError", { link = "VirtualTextError" })
hi(0, "DiagnosticVirtualTextHint", { link = "VirtualTextHint" })
hi(0, "DiagnosticVirtualTextInfo", { link = "VirtualTextInfo" })
hi(0, "DiagnosticVirtualTextWarn", { link = "VirtualTextWarning" })
hi(0, "DiagnosticWarn", { link = "WarningText" })
hi(0, "DiagnosticWarnBorder", { link = "SagaBorder" })
hi(0, "DiagnosticWord", { fg = "#32a1ad" })
hi(0, "DiffAdd", { bg = "#003200" })
hi(0, "DiffChange", { bg = "#323200" })
hi(0, "DiffDelete", { bg = "#320000" })
hi(0, "DiffText", { bg = "#404000" })
hi(0, "Directory", { fg = "#048bda" })
hi(0, "DropBarIconUISeparator", { fg = "#00768f" })
hi(0, "DropBarKindArray", { fg = "#0f84a2" })
hi(0, "DropBarKindBoolean", { fg = "#0f84a2" })
hi(0, "DropBarKindBreakStatement", { fg = "#0f84a2" })
hi(0, "DropBarKindCall", { fg = "#0f84a2" })
hi(0, "DropBarKindCaseStatement", { fg = "#0f84a2" })
hi(0, "DropBarKindClass", { fg = "#0f84a2" })
hi(0, "DropBarKindConstant", { fg = "#0f84a2" })
hi(0, "DropBarKindConstructor", { fg = "#0f84a2" })
hi(0, "DropBarKindContinueStatement", { fg = "#0f84a2" })
hi(0, "DropBarKindDeclaration", { fg = "#0f84a2" })
hi(0, "DropBarKindDelete", { fg = "#0f84a2" })
hi(0, "DropBarKindDoStatement", { fg = "#0f84a2" })
hi(0, "DropBarKindElseStatement", { fg = "#0f84a2" })
hi(0, "DropBarKindEnum", { fg = "#0f84a2" })
hi(0, "DropBarKindEnumMember", { fg = "#0f84a2" })
hi(0, "DropBarKindEvent", { fg = "#0f84a2" })
hi(0, "DropBarKindField", { fg = "#0f84a2" })
hi(0, "DropBarKindFile", { fg = "#0f84a2" })
hi(0, "DropBarKindFolder", { fg = "#0f84a2" })
hi(0, "DropBarKindForStatement", { fg = "#0f84a2" })
hi(0, "DropBarKindFunction", { fg = "#0f84a2" })
hi(0, "DropBarKindIdentifier", { fg = "#0f84a2" })
hi(0, "DropBarKindIfStatement", { fg = "#0f84a2" })
hi(0, "DropBarKindInterface", { fg = "#0f84a2" })
hi(0, "DropBarKindKeyword", { fg = "#0f84a2" })
hi(0, "DropBarKindList", { fg = "#0f84a2" })
hi(0, "DropBarKindMacro", { fg = "#0f84a2" })
hi(0, "DropBarKindMarkdownH1", { fg = "#0f84a2" })
hi(0, "DropBarKindMarkdownH2", { fg = "#0f84a2" })
hi(0, "DropBarKindMarkdownH3", { fg = "#0f84a2" })
hi(0, "DropBarKindMarkdownH4", { fg = "#0f84a2" })
hi(0, "DropBarKindMarkdownH5", { fg = "#0f84a2" })
hi(0, "DropBarKindMarkdownH6", { fg = "#0f84a2" })
hi(0, "DropBarKindMethod", { fg = "#0f84a2" })
hi(0, "DropBarKindModule", { fg = "#0f84a2" })
hi(0, "DropBarKindNamespace", { fg = "#0f84a2" })
hi(0, "DropBarKindNull", { fg = "#0f84a2" })
hi(0, "DropBarKindNumber", { fg = "#0f84a2" })
hi(0, "DropBarKindObject", { fg = "#0f84a2" })
hi(0, "DropBarKindOperator", { fg = "#0f84a2" })
hi(0, "DropBarKindPackage", { fg = "#0f84a2" })
hi(0, "DropBarKindProperty", { fg = "#0f84a2" })
hi(0, "DropBarKindReference", { fg = "#0f84a2" })
hi(0, "DropBarKindRepeat", { fg = "#0f84a2" })
hi(0, "DropBarKindScope", { fg = "#0f84a2" })
hi(0, "DropBarKindSpecifier", { fg = "#0f84a2" })
hi(0, "DropBarKindStatement", { fg = "#0f84a2" })
hi(0, "DropBarKindString", { fg = "#0f84a2" })
hi(0, "DropBarKindStruct", { fg = "#0f84a2" })
hi(0, "DropBarKindSwitchStatement", { fg = "#0f84a2" })
hi(0, "DropBarKindType", { fg = "#0f84a2" })
hi(0, "DropBarKindTypeParameter", { fg = "#0f84a2" })
hi(0, "DropBarKindUnit", { fg = "#0f84a2" })
hi(0, "DropBarKindValue", { fg = "#0f84a2" })
hi(0, "DropBarKindVariable", { fg = "#0f84a2" })
hi(0, "DropBarKindWhileStatement", { fg = "#0f84a2" })
hi(0, "DropBarMenuHoverEntry", { link = "Visual" })
hi(0, "DropBarMenuHoverIcon", { reverse = true })
hi(0, "DropBarMenuHoverSymbol", { bold = true })
hi(0, "EndOfBuffer", { fg = "#003643" })
hi(0, "Error", { fg = "#e90018" })
hi(0, "ErrorFloat", { fg = "#e90018" })
hi(0, "ErrorMsg", { fg = "#e90018" })
hi(0, "ErrorText", { sp = "#dc322f", undercurl = true })
hi(0, "Exception", { fg = "#e90018", italic = true })
hi(0, "FernBranchText", { fg = "#048bda" })
hi(0, "FinderBorder", { link = "SagaBorder" })
hi(0, "FinderCount", { link = "Title" })
hi(0, "FinderFileName", { fg = "#fff6dc" })
hi(0, "FinderIcon", { fg = "#665aff" })
hi(0, "FinderNormal", { link = "SagaBorder" })
hi(0, "FinderPreviewBorder", { link = "SagaBorder" })
hi(0, "FinderPreviewSearch", { link = "Search" })
hi(0, "FinderSelection", { bold = true, fg = "#665aff" })
hi(0, "FinderSpinner", { bold = true, fg = "#e10083" })
hi(0, "FinderSpinnerTitle", { bold = true, fg = "#e10083" })
hi(0, "FinderType", { fg = "#e10083" })
hi(0, "FinderVirtText", { fg = "#e90018" })
hi(0, "Float", { fg = "#e10083" })
hi(0, "FloatBorder", { fg = "#41b1b3" })
hi(0, "FoldColumn", { fg = "#003643" })
hi(0, "Folded", { bg = "#073642", fg = "#048bda" })
hi(0, "Foo", { bg = "#d33682", fg = "#e10083" })
hi(0, "Function", { bold = true, fg = "#b58900" })
hi(0, "GitGutterAdd", { link = "GreenSign" })
hi(0, "GitGutterAddLine", { link = "diffAdded" })
hi(0, "GitGutterAddLineNr", { fg = "#859900" })
hi(0, "GitGutterChange", { link = "BlueSign" })
hi(0, "GitGutterChangeDelete", { fg = "#e10083" })
hi(0, "GitGutterChangeDeleteLine", { fg = "#e10083" })
hi(0, "GitGutterChangeDeleteLineNr", { fg = "#e10083" })
hi(0, "GitGutterChangeLine", { link = "diffChanged" })
hi(0, "GitGutterChangeLineNr", { fg = "#048bda" })
hi(0, "GitGutterDelete", { link = "RedSign" })
hi(0, "GitGutterDeleteLine", { link = "diffRemoved" })
hi(0, "GitGutterDeleteLineNr", { fg = "#e90018" })
hi(0, "GitSignsAdd", { link = "GreenSign" })
hi(0, "GitSignsAddLn", { link = "diffAdded" })
hi(0, "GitSignsAddNr", { fg = "#859900" })
hi(0, "GitSignsChange", { link = "BlueSign" })
hi(0, "GitSignsChangeNr", { fg = "#048bda" })
hi(0, "GitSignsCurrentLineBlame", { fg = "#41b1b3" })
hi(0, "GitSignsDelete", { link = "RedSign" })
hi(0, "GitSignsDeleteLn", { link = "diffRemoved" })
hi(0, "GitSignsDeleteNr", { fg = "#e90018" })
hi(0, "GitSignsStagedAdd", { fg = "#424c00" })
hi(0, "GitSignsStagedAddCul", { fg = "#424c00" })
hi(0, "GitSignsStagedAddLn", { fg = "#424c00" })
hi(0, "GitSignsStagedAddNr", { fg = "#424c00" })
hi(0, "GitSignsStagedChange", { fg = "#00456f" })
hi(0, "GitSignsStagedChangeCul", { fg = "#00456f" })
hi(0, "GitSignsStagedChangeLn", { bg = "#323200" })
hi(0, "GitSignsStagedChangeNr", { fg = "#00456f" })
hi(0, "GitSignsStagedChangedelete", { fg = "#00456f" })
hi(0, "GitSignsStagedChangedeleteCul", { fg = "#00456f" })
hi(0, "GitSignsStagedChangedeleteLn", { bg = "#323200" })
hi(0, "GitSignsStagedChangedeleteNr", { fg = "#00456f" })
hi(0, "GitSignsStagedDelete", { fg = "#770009" })
hi(0, "GitSignsStagedDeleteCul", { fg = "#770009" })
hi(0, "GitSignsStagedDeleteNr", { fg = "#770009" })
hi(0, "GitSignsStagedTopdelete", { fg = "#770009" })
hi(0, "GitSignsStagedTopdeleteCul", { fg = "#770009" })
hi(0, "GitSignsStagedTopdeleteLn", { fg = "#770009" })
hi(0, "GitSignsStagedTopdeleteNr", { fg = "#770009" })
hi(0, "GitSignsStagedUntracked", { fg = "#424c00" })
hi(0, "GitSignsStagedUntrackedCul", { fg = "#424c00" })
hi(0, "GitSignsStagedUntrackedLn", { fg = "#424c00" })
hi(0, "GitSignsStagedUntrackedNr", { fg = "#424c00" })
hi(0, "GlyphPalette1", { fg = "#e90018" })
hi(0, "GlyphPalette2", { fg = "#859900" })
hi(0, "GlyphPalette3", { fg = "#b58900" })
hi(0, "GlyphPalette4", { fg = "#048bda" })
hi(0, "GlyphPalette6", { fg = "#859900" })
hi(0, "GlyphPalette7", { fg = "#32a1ad" })
hi(0, "GlyphPalette9", { fg = "#e90018" })
hi(0, "GreenSign", { fg = "#859900" })
hi(0, "HintFloat", { fg = "#859900" })
hi(0, "HintText", { sp = "#859900" })
hi(0, "HopNextKey", { bold = true, fg = "#e10083" })
hi(0, "HopNextKey1", { bold = true, fg = "#048bda" })
hi(0, "HopNextKey2", { fg = "#00a399" })
hi(0, "HopUnmatched", { fg = "#fff6dc" })
hi(0, "HoverBorder", { link = "SagaBorder" })
hi(0, "HoverNormal", { link = "SagaBorder" })
hi(0, "IblIndent", { fg = "#003643" })
hi(0, "Identifier", { fg = "#048bda" })
hi(0, "Ignore", { fg = "#41b1b3" })
hi(0, "IlluminatedWordRead", { link = "CurrentWord" })
hi(0, "IlluminatedWordText", { link = "CurrentWord" })
hi(0, "IlluminatedWordWrite", { link = "CurrentWord" })
hi(0, "IncSearch", { bg = "#cb4b16", fg = "#002b36" })
hi(0, "Include", { fg = "#e90018", italic = true })
hi(0, "InfoFloat", { fg = "#048bda" })
hi(0, "InsertMode", { link = "Question" })
hi(0, "Italic", { italic = true })
hi(0, "Keyword", { fg = "#e90018", italic = true })
hi(0, "Label", { fg = "#d04500" })
hi(0, "LeapBackdrop", { fg = "#ffe79d" })
hi(0, "LeapLabelPrimary", { bold = true, fg = "#e10083" })
hi(0, "LeapLabelSecondary", { bold = true, fg = "#859900" })
hi(0, "LeapMatch", { bg = "#d33682", bold = true, fg = "#32a1ad" })
hi(0, "LightspeedCursor", { link = "Cursor" })
hi(0, "LightspeedGreyWash", { fg = "#ffe79d" })
hi(0, "LightspeedLabel", { bold = true, fg = "#e90018", underline = true })
hi(0, "LightspeedLabelDistant", { bold = true, fg = "#048bda", underline = true })
hi(0, "LightspeedLabelDistantOverlapped", { fg = "#859000", underline = true })
hi(0, "LightspeedLabelOverlapped", { fg = "#665aff", underline = true })
hi(0, "LightspeedMaskedChar", { fg = "#e10083" })
hi(0, "LightspeedOneCharMatch", { bg = "#d33682", bold = true, fg = "#32a1ad" })
hi(0, "LightspeedPendingOpArea", { bg = "#859900", fg = "#002b36" })
hi(0, "LightspeedShortcut", { bg = "#dc322f", bold = true, fg = "#32a1ad" })
hi(0, "LightspeedUnlabeledMatch", { bold = true, fg = "#32a1ad" })
hi(0, "LineNr", { fg = "#0f84a2" })
hi(0, "LspCodeLens", { link = "VirtualTextInfo" })
hi(0, "LspCodeLensSeparator", { link = "VirtualTextHint" })
hi(0, "LspDiagnosticsDefaultError", { link = "DiagnosticError" })
hi(0, "LspDiagnosticsDefaultHint", { link = "DiagnosticHint" })
hi(0, "LspDiagnosticsDefaultInformation", { link = "DiagnosticInfo" })
hi(0, "LspDiagnosticsDefaultWarning", { link = "DiagnosticWarn" })
hi(0, "LspDiagnosticsFloatingError", { link = "DiagnosticFloatingError" })
hi(0, "LspDiagnosticsFloatingHint", { link = "DiagnosticFloatingHint" })
hi(0, "LspDiagnosticsFloatingInformation", { link = "DiagnosticFloatingInfo" })
hi(0, "LspDiagnosticsFloatingWarning", { link = "DiagnosticFloatingWarn" })
hi(0, "LspDiagnosticsSignError", { link = "DiagnosticSignError" })
hi(0, "LspDiagnosticsSignHint", { link = "DiagnosticSignHint" })
hi(0, "LspDiagnosticsSignInformation", { link = "DiagnosticSignInfo" })
hi(0, "LspDiagnosticsSignWarning", { link = "DiagnosticSignWarn" })
hi(0, "LspDiagnosticsUnderlineError", { link = "DiagnosticUnderlineError" })
hi(0, "LspDiagnosticsUnderlineHint", { link = "DiagnosticUnderlineHint" })
hi(0, "LspDiagnosticsUnderlineInformation", { link = "DiagnosticUnderlineInfo" })
hi(0, "LspDiagnosticsUnderlineWarning", { link = "DiagnosticUnderlineWarn" })
hi(0, "LspDiagnosticsVirtualTextError", { link = "DiagnosticVirtualTextError" })
hi(0, "LspDiagnosticsVirtualTextHint", { link = "DiagnosticVirtualTextHint" })
hi(0, "LspDiagnosticsVirtualTextInformation", { link = "DiagnosticVirtualTextInfo" })
hi(0, "LspDiagnosticsVirtualTextWarning", { link = "DiagnosticVirtualTextWarn" })
hi(0, "LspReferenceRead", { link = "CurrentWord" })
hi(0, "LspReferenceText", { link = "CurrentWord" })
hi(0, "LspReferenceWrite", { link = "CurrentWord" })
hi(0, "LspSagaLightBulb", { link = "DiagnosticSignHint" })
hi(0, "LspSignatureActiveParameter", { link = "Search" })
hi(0, "Macro", { fg = "#00a399" })
hi(0, "MatchParen", { bold = true, fg = "#d04500" })
hi(0, "MiniCompletionActiveParameter", { underline = true })
hi(0, "MiniCursorword", { bg = "#586e75" })
hi(0, "MiniCursorwordCurrent", { bg = "#586e75" })
hi(0, "MiniIndentscopePrefix", { nocombine = true })
hi(0, "MiniIndentscopeSymbol", { fg = "#003643" })
hi(0, "MiniJump", { bg = "#d33682", fg = "#ffffff" })
hi(0, "MiniJump2dSpot", { bold = true, fg = "#e10083", nocombine = true })
hi(0, "MiniStarterCurrent", { nocombine = true })
hi(0, "MiniStarterFooter", { fg = "#b58900", italic = true })
hi(0, "MiniStarterHeader", { fg = "#048bda" })
hi(0, "MiniStarterInactive", { fg = "#41b1b3", italic = true })
hi(0, "MiniStarterItem", { fg = "#32a1ad" })
hi(0, "MiniStarterItemBullet", { fg = "#ffe79d" })
hi(0, "MiniStarterItemPrefix", { fg = "#e90018" })
hi(0, "MiniStarterQuery", { fg = "#859900" })
hi(0, "MiniStarterSection", { fg = "#048bda" })
hi(0, "MiniStatuslineDevinfo", { bg = "#073642", fg = "#0f84a2" })
hi(0, "MiniStatuslineFileinfo", { bg = "#073642", fg = "#0f84a2" })
hi(0, "MiniStatuslineFilename", { bg = "#586e75", fg = "#0f84a2" })
hi(0, "MiniStatuslineInactive", { bg = "#073642", fg = "#048bda" })
hi(0, "MiniStatuslineModeCommand", { bg = "#b58900", bold = true, fg = "#000000" })
hi(0, "MiniStatuslineModeInsert", { bg = "#859900", bold = true, fg = "#000000" })
hi(0, "MiniStatuslineModeNormal", { bg = "#268bd2", bold = true, fg = "#000000" })
hi(0, "MiniStatuslineModeOther", { bg = "#2aa198", bold = true, fg = "#000000" })
hi(0, "MiniStatuslineModeReplace", { bg = "#dc322f", bold = true, fg = "#000000" })
hi(0, "MiniStatuslineModeVisual", { bg = "#d33682", bold = true, fg = "#000000" })
hi(0, "MiniSurround", { bg = "#cb4b16", fg = "#000000" })
hi(0, "MiniTablineCurrent", { bg = "#586e75", fg = "#0f84a2" })
hi(0, "MiniTablineFill", { bg = "#000000" })
hi(0, "MiniTablineHidden", { bg = "#073642", fg = "#000000" })
hi(0, "MiniTablineModifiedCurrent", { bg = "#586e75", fg = "#e90018" })
hi(0, "MiniTablineModifiedHidden", { bg = "#073642", fg = "#da0000" })
hi(0, "MiniTablineModifiedVisible", { bg = "#073642", fg = "#b58900" })
hi(0, "MiniTablineTabpagesection", { bg = "#073642" })
hi(0, "MiniTablineVisible", { bg = "#073642" })
hi(0, "MiniTestEmphasis", { bold = true })
hi(0, "MiniTestFail", { bold = true, fg = "#e90018" })
hi(0, "MiniTestPass", { bold = true, fg = "#859900" })
hi(0, "MiniTrailspace", { bg = "#dc322f" })
hi(0, "ModeMsg", { bold = true, fg = "#00768f" })
hi(0, "MoreMsg", { fg = "#048bda" })
hi(0, "MsgArea", { fg = "#ffe79d" })
hi(0, "NavicIconsArray", { fg = "#d04500" })
hi(0, "NavicIconsBoolean", { fg = "#d04500" })
hi(0, "NavicIconsClass", { fg = "#d04500" })
hi(0, "NavicIconsConstant", { fg = "#e10083" })
hi(0, "NavicIconsConstructor", { fg = "#d04500" })
hi(0, "NavicIconsEnum", { fg = "#d04500" })
hi(0, "NavicIconsEnumMember", { fg = "#859900" })
hi(0, "NavicIconsEvent", { fg = "#d04500" })
hi(0, "NavicIconsField", { fg = "#859900" })
hi(0, "NavicIconsFile", { fg = "#32a1ad" })
hi(0, "NavicIconsFunction", { fg = "#048bda" })
hi(0, "NavicIconsInterface", { fg = "#d04500" })
hi(0, "NavicIconsKey", { fg = "#e10083" })
hi(0, "NavicIconsKeyword", { fg = "#e10083" })
hi(0, "NavicIconsMethod", { fg = "#048bda" })
hi(0, "NavicIconsModule", { fg = "#b58900" })
hi(0, "NavicIconsNamespace", { fg = "#32a1ad" })
hi(0, "NavicIconsNull", { fg = "#d04500" })
hi(0, "NavicIconsNumber", { fg = "#d04500" })
hi(0, "NavicIconsObject", { fg = "#d04500" })
hi(0, "NavicIconsOperator", { fg = "#32a1ad" })
hi(0, "NavicIconsPackage", { fg = "#32a1ad" })
hi(0, "NavicIconsProperty", { fg = "#859900" })
hi(0, "NavicIconsString", { fg = "#859900" })
hi(0, "NavicIconsStruct", { fg = "#d04500" })
hi(0, "NavicIconsTypeParameter", { fg = "#859900" })
hi(0, "NavicIconsVariable", { fg = "#e10083" })
hi(0, "NavicSeparator", { fg = "#32a1ad" })
hi(0, "NavicText", { fg = "#32a1ad" })
hi(0, "NeoTreeDimText", { fg = "#41b1b3" })
hi(0, "NeoTreeDirectoryIcon", { fg = "#048bda" })
hi(0, "NeoTreeDirectoryName", { fg = "#048bda" })
hi(0, "NeoTreeExpander", { fg = "#41b1b3" })
hi(0, "NeoTreeFileNameOpened", { fg = "#e10083" })
hi(0, "NeoTreeFilterTerm", { bold = true, fg = "#859900" })
hi(0, "NeoTreeFloatBorder", { fg = "#048bda" })
hi(0, "NeoTreeFloatTitle", { fg = "#fff6dc" })
hi(0, "NeoTreeGitAdded", { fg = "#859900" })
hi(0, "NeoTreeGitConflict", { fg = "#e90018" })
hi(0, "NeoTreeGitDeleted", { fg = "#e90018" })
hi(0, "NeoTreeGitIgnored", { fg = "#41b1b3" })
hi(0, "NeoTreeGitModified", { fg = "#b58900" })
hi(0, "NeoTreeGitStaged", { fg = "#859900" })
hi(0, "NeoTreeGitUnstaged", { fg = "#e90018" })
hi(0, "NeoTreeGitUntracked", { fg = "#048bda" })
hi(0, "NeoTreeIndentMarker", { fg = "#41b1b3" })
hi(0, "NeoTreeNormal", { fg = "#32a1ad" })
hi(0, "NeoTreeRootName", { bold = true, fg = "#048bda" })
hi(0, "NeoTreeStatusLineNC", { bg = "#2aa198", fg = "#00a399" })
hi(0, "NeoTreeSymbolicLinkTarget", { fg = "#e10083" })
hi(0, "NeoTreeTabActive", { bold = true, fg = "#00a399" })
hi(0, "NeoTreeTabInactive", { fg = "#ffe79d" })
hi(0, "NeogitBranch", { fg = "#e10083" })
hi(0, "NeogitDiffAddHighlight", { fg = "#859900" })
hi(0, "NeogitDiffContextHighlight", { fg = "#00768f" })
hi(0, "NeogitDiffDeleteHighlight", { fg = "#e90018" })
hi(0, "NeogitHunkHeader", { fg = "#32a1ad" })
hi(0, "NeogitHunkHeaderHighlight", { fg = "#048bda" })
hi(0, "NeogitRemote", { fg = "#665aff" })
hi(0, "NeotestAdapterName", { bold = true, fg = "#e10083" })
hi(0, "NeotestBorder", { fg = "#048bda" })
hi(0, "NeotestDir", { fg = "#048bda" })
hi(0, "NeotestExpandMarker", { fg = "#ffe79d" })
hi(0, "NeotestFailed", { fg = "#e90018" })
hi(0, "NeotestFile", { fg = "#00a399" })
hi(0, "NeotestFocused", { fg = "#b58900" })
hi(0, "NeotestIndent", { fg = "#ffe79d" })
hi(0, "NeotestMarked", { fg = "#048bda" })
hi(0, "NeotestNamespace", { fg = "#859000" })
hi(0, "NeotestPassed", { fg = "#859900" })
hi(0, "NeotestRunning", { fg = "#b58900" })
hi(0, "NeotestSkipped", { fg = "#048bda" })
hi(0, "NeotestTarget", { fg = "#048bda" })
hi(0, "NeotestTest", { fg = "#41b1b3" })
hi(0, "NeotestWinSelect", { fg = "#048bda" })
hi(0, "NoiceCompletionItemKindClass", { fg = "#d04500" })
hi(0, "NoiceCompletionItemKindConstant", { fg = "#e10083" })
hi(0, "NoiceCompletionItemKindConstructor", { fg = "#048bda" })
hi(0, "NoiceCompletionItemKindDefault", { fg = "#00768f" })
hi(0, "NoiceCompletionItemKindEnum", { fg = "#d04500" })
hi(0, "NoiceCompletionItemKindEnumMember", {})
hi(0, "NoiceCompletionItemKindEvent", { fg = "#d04500" })
hi(0, "NoiceCompletionItemKindField", {})
hi(0, "NoiceCompletionItemKindFunction", { fg = "#048bda" })
hi(0, "NoiceCompletionItemKindInterface", { fg = "#d04500" })
hi(0, "NoiceCompletionItemKindKeyword", { fg = "#665aff" })
hi(0, "NoiceCompletionItemKindMethod", { fg = "#048bda" })
hi(0, "NoiceCompletionItemKindModule", { fg = "#b58900" })
hi(0, "NoiceCompletionItemKindProperty", {})
hi(0, "NoiceCompletionItemKindReference", { fg = "#e10083" })
hi(0, "NoiceCompletionItemKindSnippet", { fg = "#000000" })
hi(0, "NoiceCompletionItemKindStruct", { fg = "#d04500" })
hi(0, "NoiceCompletionItemKindUnit", { fg = "#d04500" })
hi(0, "NoiceCompletionItemKindValue", { fg = "#e10083" })
hi(0, "NoiceCompletionItemKindVariable", { fg = "#e10083" })
hi(0, "NoiceFormatProgressDone", { bg = "#859000", fg = "#002b36" })
hi(0, "NoiceHiddenCursor", { blend = 100, nocombine = true })
hi(0, "NonText", { fg = "#00768f" })
hi(0, "Normal", { fg = "#32a1ad" })
hi(0, "NormalFloat", { fg = "#32a1ad" })
hi(0, "NormalMode", { fg = "#ffe79d" })
hi(0, "NormalNC", { fg = "#32a1ad" })
hi(0, "NormalSB", { bg = "#002b36", fg = "#32a1ad" })
hi(0, "NotifyDEBUGBorder", { fg = "#41b1b3" })
hi(0, "NotifyDEBUGIcon", { fg = "#41b1b3" })
hi(0, "NotifyDEBUGTitle", { fg = "#41b1b3" })
hi(0, "NotifyERRORBorder", { fg = "#e90018" })
hi(0, "NotifyERRORIcon", { fg = "#e90018" })
hi(0, "NotifyERRORTitle", { fg = "#e90018" })
hi(0, "NotifyINFOBorder", { fg = "#859900" })
hi(0, "NotifyINFOIcon", { fg = "#859900" })
hi(0, "NotifyINFOTitle", { fg = "#859900" })
hi(0, "NotifyTRACEBorder", { fg = "#e10083" })
hi(0, "NotifyTRACEIcon", { fg = "#e10083" })
hi(0, "NotifyTRACETitle", { fg = "#e10083" })
hi(0, "NotifyWARNBorder", { fg = "#b58900" })
hi(0, "NotifyWARNIcon", { fg = "#b58900" })
hi(0, "NotifyWARNTitle", { fg = "#b58900" })
hi(0, "Number", { fg = "#e10083" })
hi(0, "NvimTreeEmptyFolderName", { fg = "#859900" })
hi(0, "NvimTreeExecFile", { fg = "#32a1ad" })
hi(0, "NvimTreeFolderIcon", { fg = "#d04500" })
hi(0, "NvimTreeFolderName", { fg = "#859900" })
hi(0, "NvimTreeGitDeleted", { fg = "#e90018" })
hi(0, "NvimTreeGitDirty", { fg = "#b58900" })
hi(0, "NvimTreeGitMerge", { fg = "#d04500" })
hi(0, "NvimTreeGitNew", { fg = "#00a399" })
hi(0, "NvimTreeGitRenamed", { fg = "#e10083" })
hi(0, "NvimTreeGitStaged", { fg = "#048bda" })
hi(0, "NvimTreeImageFile", { fg = "#32a1ad" })
hi(0, "NvimTreeIndentMarker", { fg = "#00768f" })
hi(0, "NvimTreeLspDiagnosticsError", { link = "RedSign" })
hi(0, "NvimTreeLspDiagnosticsHint", { link = "GreenSign" })
hi(0, "NvimTreeLspDiagnosticsInformation", { link = "BlueSign" })
hi(0, "NvimTreeLspDiagnosticsWarning", { link = "YellowSign" })
hi(0, "NvimTreeMarkdownFile", { fg = "#32a1ad" })
hi(0, "NvimTreeOpenedFile", { fg = "#32a1ad" })
hi(0, "NvimTreeOpenedFolderName", { fg = "#859900" })
hi(0, "NvimTreeRootFolder", { fg = "#41b1b3" })
hi(0, "NvimTreeSpecialFile", { fg = "#32a1ad" })
hi(0, "NvimTreeSymlink", { fg = "#32a1ad" })
hi(0, "Operator", { fg = "#d04500" })
hi(0, "OutlineIndent", { fg = "#e10083" })
hi(0, "OutlinePreviewBorder", { link = "SagaBorder" })
hi(0, "OutlinePreviewNormal", { link = "SagaBorder" })
hi(0, "Pmenu", { fg = "#32a1ad" })
hi(0, "PmenuSbar", {})
hi(0, "PmenuSel", { bg = "#586e75", fg = "#fff6dc" })
hi(0, "PmenuThumb", { bg = "#93a1a1" })
hi(0, "PreCondit", { fg = "#e10083", italic = true })
hi(0, "PreProc", { fg = "#e10083", italic = true })
hi(0, "Question", { fg = "#048bda" })
hi(0, "QuickFixLine", { bg = "#073642", bold = true, undercurl = true })
hi(0, "RainbowBlue", { blend = 0, fg = "#048bda" })
hi(0, "RainbowCyan", { blend = 0, fg = "#e10083" })
hi(0, "RainbowGreen", { blend = 0, fg = "#859900" })
hi(0, "RainbowOrange", { blend = 0, fg = "#e10083" })
hi(0, "RainbowRed", { blend = 0, fg = "#e90018" })
hi(0, "RainbowViolet", { blend = 0, fg = "#665aff" })
hi(0, "RainbowYellow", { blend = 0, fg = "#b58900" })
hi(0, "RedSign", { fg = "#e90018" })
hi(0, "Removed", { ctermfg = 9, fg = "#ffbab2" })
hi(0, "RenameBorder", { link = "SagaBorder" })
hi(0, "RenameMatch", { link = "Search" })
hi(0, "RenameNormal", { fg = "#d04500" })
hi(0, "Repeat", { fg = "#e90018", italic = true })
hi(0, "ReplaceMode", { link = "WarningMsg" })
hi(0, "SagaBeacon", { bg = "#d33682" })
hi(0, "SagaBorder", { link = "FloatBorder" })
hi(0, "SagaCollapse", { fg = "#e90018" })
hi(0, "SagaExpand", { fg = "#e90018" })
hi(0, "SagaShadow", { bg = "#073642" })
hi(0, "ScrollbarError", { fg = "#e90018" })
hi(0, "ScrollbarErrorHandle", { bg = "#073642", fg = "#e90018" })
hi(0, "ScrollbarHandle", { bg = "#073642" })
hi(0, "ScrollbarHint", { fg = "#048bda" })
hi(0, "ScrollbarHintHandle", { bg = "#073642", fg = "#048bda" })
hi(0, "ScrollbarInfo", { fg = "#859900" })
hi(0, "ScrollbarInfoHandle", { bg = "#073642", fg = "#859900" })
hi(0, "ScrollbarMisc", { fg = "#e10083" })
hi(0, "ScrollbarMiscHandle", { bg = "#073642", fg = "#e10083" })
hi(0, "ScrollbarSearch", { fg = "#d04500" })
hi(0, "ScrollbarSearchHandle", { bg = "#073642", fg = "#d04500" })
hi(0, "ScrollbarWarn", { fg = "#b58900" })
hi(0, "ScrollbarWarnHandle", { bg = "#073642", fg = "#b58900" })
hi(0, "Search", { bg = "#859000", fg = "#002b36" })
hi(0, "SelectMode", { link = "ErrorMsg" })
hi(0, "SignColumn", {})
hi(0, "SignColumnSB", { bg = "#002b36", fg = "#003643" })
hi(0, "SnacksBackdrop", { bg = "#000000" })
hi(0, "SnacksImageMath", { fg = "#ff55a0" })
hi(0, "Sneak", { link = "Search" })
hi(0, "SneakScope", { link = "DiffText" })
hi(0, "Special", { fg = "#e10083" })
hi(0, "SpecialChar", { fg = "#b58900" })
hi(0, "SpecialComment", { fg = "#41b1b3" })
hi(0, "SpecialKey", { fg = "#00768f" })
hi(0, "SpellBad", { sp = "#dc322f", undercurl = true })
hi(0, "SpellCap", { sp = "#268bd2", undercurl = true })
hi(0, "SpellLocal", { sp = "#d33682", undercurl = true })
hi(0, "SpellRare", { sp = "#859900", undercurl = true })
hi(0, "Statement", { fg = "#e90018", italic = true })
hi(0, "StatusLine", { fg = "#32a1ad" })
hi(0, "StatusLineNC", { fg = "#00768f" })
hi(0, "StorageClass", { fg = "#d04500" })
hi(0, "String", { fg = "#859900", italic = true })
hi(0, "Structure", { fg = "#d04500" })
hi(0, "Substitute", { bg = "#dc322f", fg = "#002b36" })
hi(0, "TSAnnotation", { fg = "#e10083" })
hi(0, "TSAttribute", { fg = "#e10083" })
hi(0, "TSBoolean", { fg = "#e10083" })
hi(0, "TSCharacter", { fg = "#00a399" })
hi(0, "TSComment", { link = "Comment" })
hi(0, "TSConditional", { link = "Conditional" })
hi(0, "TSConstBuiltin", { fg = "#048bda", italic = true })
hi(0, "TSConstMacro", { fg = "#048bda", italic = true })
hi(0, "TSConstant", { fg = "#32a1ad" })
hi(0, "TSConstructor", { bold = true, fg = "#859900" })
hi(0, "TSException", { fg = "#e90018" })
hi(0, "TSField", { fg = "#859900" })
hi(0, "TSFloat", { fg = "#e10083" })
hi(0, "TSFuncBuiltin", { bold = true, fg = "#859900" })
hi(0, "TSFuncMacro", { bold = true, fg = "#859900" })
hi(0, "TSFunction", { bold = true, fg = "#859900" })
hi(0, "TSInclude", { fg = "#e90018" })
hi(0, "TSKeyword", { fg = "#e90018" })
hi(0, "TSKeywordFunction", { fg = "#e90018" })
hi(0, "TSKeywordOperator", { fg = "#d04500" })
hi(0, "TSLabel", { fg = "#d04500" })
hi(0, "TSMath", { fg = "#048bda" })
hi(0, "TSMethod", { bold = true, fg = "#859900" })
hi(0, "TSNamespace", { fg = "#b58900", italic = true })
hi(0, "TSNone", { fg = "#32a1ad" })
hi(0, "TSNumber", { fg = "#e10083" })
hi(0, "TSOperator", { fg = "#d04500" })
hi(0, "TSParameter", { fg = "#32a1ad" })
hi(0, "TSParameterReference", { fg = "#32a1ad" })
hi(0, "TSProperty", { fg = "#048bda" })
hi(0, "TSPunctBracket", { fg = "#32a1ad" })
hi(0, "TSPunctDelimiter", { fg = "#41b1b3" })
hi(0, "TSPunctSpecial", { fg = "#048bda" })
hi(0, "TSRepeat", { fg = "#e90018" })
hi(0, "TSStorageClass", { fg = "#d04500" })
hi(0, "TSStrike", { fg = "#41b1b3" })
hi(0, "TSString", { fg = "#00a399" })
hi(0, "TSStringEscape", { fg = "#859900" })
hi(0, "TSStringRegex", { fg = "#859900" })
hi(0, "TSSymbol", { fg = "#32a1ad" })
hi(0, "TSTag", { fg = "#d04500" })
hi(0, "TSTagDelimiter", { fg = "#859900" })
hi(0, "TSText", { fg = "#859900" })
hi(0, "TSType", { fg = "#b58900" })
hi(0, "TSTypeBuiltin", { fg = "#b58900", italic = true })
hi(0, "TSURI", { link = "markdownUrl" })
hi(0, "TSVariable", { fg = "#32a1ad" })
hi(0, "TSVariableBuiltin", { fg = "#048bda", italic = true })
hi(0, "TabLine", { fg = "#00768f" })
hi(0, "TabLineFill", { bg = "#002b36" })
hi(0, "TabLineSel", { bg = "#268bd2", fg = "#002b36" })
hi(0, "Tag", { fg = "#d04500" })
hi(0, "TelescopeBorder", { fg = "#41b1b3" })
hi(0, "TelescopeMatching", { bold = true, fg = "#859900" })
hi(0, "TelescopeNormal", { fg = "#32a1ad" })
hi(0, "TelescopePromptPrefix", { fg = "#d04500" })
hi(0, "TelescopeSelection", { link = "diffAdded" })
hi(0, "TermCursor", { link = "Cursor" })
hi(0, "TerminalBorder", { link = "SagaBorder" })
hi(0, "TerminalMode", { link = "Operator" })
hi(0, "TerminalNormal", { link = "SagaBorder" })
hi(0, "TerminalNormalMode", { fg = "#ffe79d" })
hi(0, "TinyInlineDiagnosticVirtualTextArrow", { bg = "#002b36", fg = "#00768f" })
hi(0, "TinyInlineDiagnosticVirtualTextArrowNoBg", { fg = "#00768f" })
hi(0, "TinyInlineDiagnosticVirtualTextBg", { bg = "#002b36" })
hi(0, "TinyInlineDiagnosticVirtualTextError", { bg = "#000000" })
hi(0, "TinyInlineDiagnosticVirtualTextErrorCursorLine", { bg = "#002b36" })
hi(0, "TinyInlineDiagnosticVirtualTextErrorMixError", { bg = "#000000" })
hi(0, "TinyInlineDiagnosticVirtualTextErrorMixHint", { bg = "#000000" })
hi(0, "TinyInlineDiagnosticVirtualTextErrorMixInfo", { bg = "#000000" })
hi(0, "TinyInlineDiagnosticVirtualTextErrorMixWarn", { bg = "#000000" })
hi(0, "TinyInlineDiagnosticVirtualTextHint", { bg = "#000000" })
hi(0, "TinyInlineDiagnosticVirtualTextHintCursorLine", { bg = "#002b36" })
hi(0, "TinyInlineDiagnosticVirtualTextHintMixError", { bg = "#000000" })
hi(0, "TinyInlineDiagnosticVirtualTextHintMixHint", { bg = "#000000" })
hi(0, "TinyInlineDiagnosticVirtualTextHintMixInfo", { bg = "#000000" })
hi(0, "TinyInlineDiagnosticVirtualTextHintMixWarn", { bg = "#000000" })
hi(0, "TinyInlineDiagnosticVirtualTextInfo", { bg = "#000000" })
hi(0, "TinyInlineDiagnosticVirtualTextInfoCursorLine", { bg = "#002b36" })
hi(0, "TinyInlineDiagnosticVirtualTextInfoMixError", { bg = "#000000" })
hi(0, "TinyInlineDiagnosticVirtualTextInfoMixHint", { bg = "#000000" })
hi(0, "TinyInlineDiagnosticVirtualTextInfoMixInfo", { bg = "#000000" })
hi(0, "TinyInlineDiagnosticVirtualTextInfoMixWarn", { bg = "#000000" })
hi(0, "TinyInlineDiagnosticVirtualTextWarn", { bg = "#000000" })
hi(0, "TinyInlineDiagnosticVirtualTextWarnCursorLine", { bg = "#002b36" })
hi(0, "TinyInlineDiagnosticVirtualTextWarnMixError", { bg = "#000000" })
hi(0, "TinyInlineDiagnosticVirtualTextWarnMixHint", { bg = "#000000" })
hi(0, "TinyInlineDiagnosticVirtualTextWarnMixInfo", { bg = "#000000" })
hi(0, "TinyInlineDiagnosticVirtualTextWarnMixWarn", { bg = "#000000" })
hi(0, "TinyInlineInvDiagnosticVirtualTextError", { bg = "#002b36", fg = "#000000" })
hi(0, "TinyInlineInvDiagnosticVirtualTextErrorNoBg", { fg = "#000000" })
hi(0, "TinyInlineInvDiagnosticVirtualTextHint", { bg = "#002b36", fg = "#000000" })
hi(0, "TinyInlineInvDiagnosticVirtualTextHintNoBg", { fg = "#000000" })
hi(0, "TinyInlineInvDiagnosticVirtualTextInfo", { bg = "#002b36", fg = "#000000" })
hi(0, "TinyInlineInvDiagnosticVirtualTextInfoNoBg", { fg = "#000000" })
hi(0, "TinyInlineInvDiagnosticVirtualTextWarn", { bg = "#002b36", fg = "#000000" })
hi(0, "TinyInlineInvDiagnosticVirtualTextWarnNoBg", { fg = "#000000" })
hi(0, "Title", { bold = true, fg = "#048bda" })
hi(0, "TitleIcon", { fg = "#e90018" })
hi(0, "TitleString", { link = "String" })
hi(0, "TitleSymbol", { link = "Symbol" })
hi(0, "Todo", { bg = "#b59900", fg = "#002b36" })
hi(0, "TroubleCount", { fg = "#41b1b3" })
hi(0, "TroubleNormal", { fg = "#41b1b3" })
hi(0, "TroubleText", { fg = "#32a1ad" })
hi(0, "Type", { fg = "#b58900" })
hi(0, "Typedef", { fg = "#e90018", italic = true })
hi(0, "VertSplit", { fg = "#002b36" })
hi(0, "VirtualTextError", { fg = "#e90018" })
hi(0, "VirtualTextHint", { fg = "#859900" })
hi(0, "VirtualTextInfo", { fg = "#048bda" })
hi(0, "VirtualTextWarning", { fg = "#b58900" })
hi(0, "Visual", { bg = "#073642" })
hi(0, "VisualMode", { link = "String" })
hi(0, "VisualNOS", { bg = "#073642" })
hi(0, "WarningFloat", { fg = "#b58900" })
hi(0, "WarningMsg", { fg = "#e90018" })
hi(0, "WarningText", { sp = "#b58900", undercurl = true })
hi(0, "WhichKey", { fg = "#e90018" })
hi(0, "WhichKeyDesc", { fg = "#e10083" })
hi(0, "WhichKeyGroup", { fg = "#048bda" })
hi(0, "WhichKeySeparator", { fg = "#859900" })
hi(0, "WhichKeyValue", { fg = "#00768f" })
hi(0, "Whitespace", { fg = "#00768f" })
hi(0, "WildMenu", { bg = "#073642" })
hi(0, "WinBar", { bg = "#07080d", bold = true, fg = "#759cef" })
hi(0, "WinBarNC", { bg = "#07080d", fg = "#759cef" })
hi(0, "WinSeparator", { bold = true, fg = "#002b36" })
hi(0, "YankyPut", { link = "IncSearch" })
hi(0, "YankyYanked", { link = "IncSearch" })
hi(0, "YellowSign", { fg = "#b58900" })
hi(0, "bashStatement", { fg = "#d04500" })
hi(0, "cmakeCommand", { fg = "#d04500" })
hi(0, "cmakeKWExternalProject", { fg = "#00a399" })
hi(0, "cmakeKWadd_compile_definitions", { fg = "#00a399" })
hi(0, "cmakeKWadd_compile_options", { fg = "#00a399" })
hi(0, "cmakeKWadd_custom_command", { fg = "#00a399" })
hi(0, "cmakeKWadd_custom_target", { fg = "#00a399" })
hi(0, "cmakeKWadd_definitions", { fg = "#00a399" })
hi(0, "cmakeKWadd_dependencies", { fg = "#00a399" })
hi(0, "cmakeKWadd_executable", { fg = "#00a399" })
hi(0, "cmakeKWadd_library", { fg = "#00a399" })
hi(0, "cmakeKWadd_link_options", { fg = "#00a399" })
hi(0, "cmakeKWadd_subdirectory", { fg = "#00a399" })
hi(0, "cmakeKWadd_test", { fg = "#00a399" })
hi(0, "cmakeKWbuild_command", { fg = "#00a399" })
hi(0, "cmakeKWcmake_host_system_information", { fg = "#00a399" })
hi(0, "cmakeKWcmake_minimum_required", { fg = "#00a399" })
hi(0, "cmakeKWcmake_parse_arguments", { fg = "#00a399" })
hi(0, "cmakeKWcmake_policy", { fg = "#00a399" })
hi(0, "cmakeKWconfigure_file", { fg = "#00a399" })
hi(0, "cmakeKWconfigure_package_config_file", { fg = "#b58900" })
hi(0, "cmakeKWcreate_test_sourcelist", { fg = "#00a399" })
hi(0, "cmakeKWctest_build", { fg = "#00a399" })
hi(0, "cmakeKWctest_configure", { fg = "#00a399" })
hi(0, "cmakeKWctest_coverage", { fg = "#00a399" })
hi(0, "cmakeKWctest_memcheck", { fg = "#00a399" })
hi(0, "cmakeKWctest_run_script", { fg = "#00a399" })
hi(0, "cmakeKWctest_start", { fg = "#00a399" })
hi(0, "cmakeKWctest_submit", { fg = "#00a399" })
hi(0, "cmakeKWctest_test", { fg = "#00a399" })
hi(0, "cmakeKWctest_update", { fg = "#00a399" })
hi(0, "cmakeKWctest_upload", { fg = "#00a399" })
hi(0, "cmakeKWdefine_property", { fg = "#00a399" })
hi(0, "cmakeKWdoxygen_add_docs", { fg = "#00a399" })
hi(0, "cmakeKWenable_language", { fg = "#00a399" })
hi(0, "cmakeKWenable_testing", { fg = "#00a399" })
hi(0, "cmakeKWexec_program", { fg = "#00a399" })
hi(0, "cmakeKWexecute_process", { fg = "#00a399" })
hi(0, "cmakeKWexport", { fg = "#00a399" })
hi(0, "cmakeKWexport_library_dependencies", { fg = "#00a399" })
hi(0, "cmakeKWfile", { fg = "#00a399" })
hi(0, "cmakeKWfind_file", { fg = "#00a399" })
hi(0, "cmakeKWfind_library", { fg = "#00a399" })
hi(0, "cmakeKWfind_package", { fg = "#00a399" })
hi(0, "cmakeKWfind_path", { fg = "#00a399" })
hi(0, "cmakeKWfind_program", { fg = "#00a399" })
hi(0, "cmakeKWfltk_wrap_ui", { fg = "#00a399" })
hi(0, "cmakeKWforeach", { fg = "#00a399" })
hi(0, "cmakeKWfunction", { fg = "#00a399" })
hi(0, "cmakeKWget_cmake_property", { fg = "#00a399" })
hi(0, "cmakeKWget_directory_property", { fg = "#00a399" })
hi(0, "cmakeKWget_filename_component", { fg = "#00a399" })
hi(0, "cmakeKWget_property", { fg = "#00a399" })
hi(0, "cmakeKWget_source_file_property", { fg = "#00a399" })
hi(0, "cmakeKWget_target_property", { fg = "#00a399" })
hi(0, "cmakeKWget_test_property", { fg = "#00a399" })
hi(0, "cmakeKWif", { fg = "#00a399" })
hi(0, "cmakeKWinclude", { fg = "#00a399" })
hi(0, "cmakeKWinclude_directories", { fg = "#00a399" })
hi(0, "cmakeKWinclude_external_msproject", { fg = "#00a399" })
hi(0, "cmakeKWinclude_guard", { fg = "#00a399" })
hi(0, "cmakeKWinstall", { fg = "#00a399" })
hi(0, "cmakeKWinstall_files", { fg = "#00a399" })
hi(0, "cmakeKWinstall_programs", { fg = "#00a399" })
hi(0, "cmakeKWinstall_targets", { fg = "#00a399" })
hi(0, "cmakeKWlink_directories", { fg = "#00a399" })
hi(0, "cmakeKWlist", { fg = "#00a399" })
hi(0, "cmakeKWload_cache", { fg = "#00a399" })
hi(0, "cmakeKWload_command", { fg = "#00a399" })
hi(0, "cmakeKWmacro", { fg = "#00a399" })
hi(0, "cmakeKWmark_as_advanced", { fg = "#00a399" })
hi(0, "cmakeKWmath", { fg = "#00a399" })
hi(0, "cmakeKWmessage", { fg = "#00a399" })
hi(0, "cmakeKWoption", { fg = "#00a399" })
hi(0, "cmakeKWproject", { fg = "#00a399" })
hi(0, "cmakeKWqt_wrap_cpp", { fg = "#00a399" })
hi(0, "cmakeKWqt_wrap_ui", { fg = "#00a399" })
hi(0, "cmakeKWremove", { fg = "#00a399" })
hi(0, "cmakeKWseparate_arguments", { fg = "#00a399" })
hi(0, "cmakeKWset", { fg = "#00a399" })
hi(0, "cmakeKWset_directory_properties", { fg = "#00a399" })
hi(0, "cmakeKWset_property", { fg = "#00a399" })
hi(0, "cmakeKWset_source_files_properties", { fg = "#00a399" })
hi(0, "cmakeKWset_target_properties", { fg = "#00a399" })
hi(0, "cmakeKWset_tests_properties", { fg = "#00a399" })
hi(0, "cmakeKWsource_group", { fg = "#00a399" })
hi(0, "cmakeKWstring", { fg = "#00a399" })
hi(0, "cmakeKWsubdirs", { fg = "#00a399" })
hi(0, "cmakeKWtarget_compile_definitions", { fg = "#00a399" })
hi(0, "cmakeKWtarget_compile_features", { fg = "#00a399" })
hi(0, "cmakeKWtarget_compile_options", { fg = "#00a399" })
hi(0, "cmakeKWtarget_include_directories", { fg = "#00a399" })
hi(0, "cmakeKWtarget_link_directories", { fg = "#00a399" })
hi(0, "cmakeKWtarget_link_libraries", { fg = "#00a399" })
hi(0, "cmakeKWtarget_link_options", { fg = "#00a399" })
hi(0, "cmakeKWtarget_precompile_headers", { fg = "#00a399" })
hi(0, "cmakeKWtarget_sources", { fg = "#00a399" })
hi(0, "cmakeKWtry_compile", { fg = "#00a399" })
hi(0, "cmakeKWtry_run", { fg = "#00a399" })
hi(0, "cmakeKWunset", { fg = "#00a399" })
hi(0, "cmakeKWuse_mangled_mesa", { fg = "#00a399" })
hi(0, "cmakeKWvariable_requires", { fg = "#00a399" })
hi(0, "cmakeKWvariable_watch", { fg = "#00a399" })
hi(0, "cmakeKWwrite_basic_package_version_file", { fg = "#b58900" })
hi(0, "cmakeKWwrite_file", { fg = "#00a399" })
hi(0, "cssAttr", { fg = "#d04500" })
hi(0, "cssAttrComma", { fg = "#32a1ad" })
hi(0, "cssAttributeSelector", { fg = "#00a399" })
hi(0, "cssBraces", { fg = "#32a1ad" })
hi(0, "cssClassName", { fg = "#e90018", italic = true })
hi(0, "cssClassNameDot", { fg = "#e90018" })
hi(0, "cssColor", { fg = "#859900" })
hi(0, "cssCommonAttr", { fg = "#b58900" })
hi(0, "cssFunctionName", { fg = "#b58900" })
hi(0, "cssImportant", { fg = "#e90018", italic = true })
hi(0, "cssNoise", { fg = "#41b1b3" })
hi(0, "cssProp", { fg = "#00a399" })
hi(0, "cssPseudoClass", { fg = "#e10083" })
hi(0, "cssPseudoClassFn", { fg = "#859900" })
hi(0, "cssPseudoClassId", { fg = "#048bda" })
hi(0, "cssSelectorOp", { fg = "#d04500" })
hi(0, "cssSelectorOp2", { fg = "#d04500" })
hi(0, "cssTagName", { fg = "#e10083", italic = true })
hi(0, "cssUnitDecorators", { fg = "#d04500" })
hi(0, "cssValueAngle", { fg = "#859900" })
hi(0, "cssValueFrequency", { fg = "#859900" })
hi(0, "cssValueInteger", { fg = "#859900" })
hi(0, "cssValueLength", { fg = "#859900" })
hi(0, "cssValueNumber", { fg = "#859900" })
hi(0, "cssValueTime", { fg = "#859900" })
hi(0, "cssVendor", { fg = "#41b1b3" })
hi(0, "diffAdded", { fg = "#859900" })
hi(0, "diffChanged", { fg = "#048bda" })
hi(0, "diffFile", { fg = "#00a399" })
hi(0, "diffIndexLine", { fg = "#e10083" })
hi(0, "diffLine", { fg = "#41b1b3" })
hi(0, "diffNewFile", { fg = "#d04500" })
hi(0, "diffOldFile", { fg = "#b58900" })
hi(0, "diffRemoved", { fg = "#e90018" })
hi(0, "goConstants", { fg = "#00a399" })
hi(0, "goDeclType", { fg = "#d04500", italic = true })
hi(0, "goDirective", { fg = "#e10083", italic = true })
hi(0, "healthError", { fg = "#e90018" })
hi(0, "healthSuccess", { fg = "#859900" })
hi(0, "healthWarning", { fg = "#b58900" })
hi(0, "htmlBold", { bold = true })
hi(0, "htmlBoldItalics", { bold = true, italic = true })
hi(0, "htmlBoldUnderline", { bold = true, underline = true })
hi(0, "htmlBoldUnderlineItalic", { bold = true, italic = true, underline = true })
hi(0, "htmlH1", { bold = true, fg = "#e90018" })
hi(0, "htmlH2", { bold = true, fg = "#d04500" })
hi(0, "htmlH3", { bold = true, fg = "#b58900" })
hi(0, "htmlH4", { bold = true, fg = "#859900" })
hi(0, "htmlH5", { bold = true, fg = "#048bda" })
hi(0, "htmlH6", { bold = true, fg = "#e10083" })
hi(0, "htmlItalic", { italic = true })
hi(0, "htmlLink", { underline = true })
hi(0, "htmlUnderline", { underline = true })
hi(0, "htmlUnderlineItalic", { italic = true, underline = true })
hi(0, "illuminatedCurWord", { link = "CurrentWord" })
hi(0, "illuminatedWord", { link = "CurrentWord" })
hi(0, "javaAnnotation", { fg = "#048bda" })
hi(0, "javaClassDecl", { fg = "#e90018", italic = true })
hi(0, "javaContant", { fg = "#665aff" })
hi(0, "javaMethodDecl", { fg = "#e90018", italic = true })
hi(0, "javaParen", { fg = "#32a1ad" })
hi(0, "javaParen1", { fg = "#32a1ad" })
hi(0, "javaParen2", { fg = "#32a1ad" })
hi(0, "javaParen3", { fg = "#32a1ad" })
hi(0, "javaParen4", { fg = "#32a1ad" })
hi(0, "javaParen5", { fg = "#32a1ad" })
hi(0, "javaScriptBraces", { fg = "#32a1ad" })
hi(0, "javaScriptFunction", { fg = "#e90018", italic = true })
hi(0, "javaScriptGlobal", { fg = "#b58900" })
hi(0, "javaScriptIdentifier", { fg = "#d04500" })
hi(0, "javaScriptMember", { fg = "#00a399" })
hi(0, "javaScriptMessage", { fg = "#b58900" })
hi(0, "javaScriptNull", { fg = "#00a399" })
hi(0, "javaScriptOperator", { fg = "#d04500" })
hi(0, "javaScriptParens", { fg = "#32a1ad" })
hi(0, "javaTypedef", { fg = "#00a399" })
hi(0, "javaUserLabel", { fg = "#e10083" })
hi(0, "javaVarArg", { fg = "#859900" })
hi(0, "jsonBraces", { fg = "#32a1ad" })
hi(0, "jsonKeyword", { fg = "#d04500" })
hi(0, "jsonQuote", { fg = "#41b1b3" })
hi(0, "lCursor", { bg = "#839496", fg = "#002b36" })
hi(0, "luaFunc", { fg = "#859900" })
hi(0, "luaFunction", { fg = "#00a399" })
hi(0, "luaIn", { fg = "#e90018", italic = true })
hi(0, "luaTable", { fg = "#32a1ad" })
hi(0, "makeCommands", { fg = "#d04500" })
hi(0, "makeIdent", { fg = "#00a399" })
hi(0, "makeSpecTarget", { fg = "#b58900" })
hi(0, "makeTarget", { fg = "#048bda" })
hi(0, "markdownBlockquote", { fg = "#00768f" })
hi(0, "markdownBold", { bold = true })
hi(0, "markdownBoldDelimiter", { fg = "#41b1b3" })
hi(0, "markdownCode", { fg = "#859900" })
hi(0, "markdownCodeBlock", { fg = "#00a399" })
hi(0, "markdownCodeDelimiter", { fg = "#00a399" })
hi(0, "markdownH1", { bold = true, fg = "#e90018" })
hi(0, "markdownH2", { bold = true, fg = "#d04500" })
hi(0, "markdownH3", { bold = true, fg = "#b58900" })
hi(0, "markdownH4", { bold = true, fg = "#859900" })
hi(0, "markdownH5", { bold = true, fg = "#048bda" })
hi(0, "markdownH6", { bold = true, fg = "#e10083" })
hi(0, "markdownHeadingDelimiter", { fg = "#41b1b3" })
hi(0, "markdownHeadingRule", { fg = "#41b1b3" })
hi(0, "markdownId", { fg = "#b58900" })
hi(0, "markdownIdDeclaration", { link = "markdownLinkText" })
hi(0, "markdownItalic", { italic = true })
hi(0, "markdownItalicDelimiter", { fg = "#41b1b3", italic = true })
hi(0, "markdownLinkDelimiter", { fg = "#41b1b3" })
hi(0, "markdownLinkText", { fg = "#e10083" })
hi(0, "markdownLinkTextDelimiter", { fg = "#41b1b3" })
hi(0, "markdownListMarker", { fg = "#e90018" })
hi(0, "markdownOrderedListMarker", { fg = "#e90018" })
hi(0, "markdownRule", { fg = "#e10083" })
hi(0, "markdownUrl", { fg = "#048bda", underline = true })
hi(0, "markdownUrlDelimiter", { fg = "#41b1b3" })
hi(0, "markdownUrlTitleDelimiter", { fg = "#41b1b3" })
hi(0, "mkdCodeDelimiter", { bg = "#002b36", fg = "#32a1ad" })
hi(0, "phpComparison", { fg = "#d04500" })
hi(0, "phpDefine", { fg = "#d04500", italic = true })
hi(0, "phpInterpSimpleCurly", { fg = "#b58900" })
hi(0, "phpMemberSelector", { fg = "#859900" })
hi(0, "phpMethodsVar", { fg = "#00a399" })
hi(0, "phpSpecialFunction", { bold = true, fg = "#859900" })
hi(0, "phpStructure", { fg = "#e90018", italic = true })
hi(0, "phpVarSelector", { fg = "#048bda" })
hi(0, "pythonBuiltin", { fg = "#b58900" })
hi(0, "pythonDecoratorName", { fg = "#048bda" })
hi(0, "pythonExceptions", { fg = "#b58900" })
hi(0, "qfFileName", { fg = "#048bda" })
hi(0, "qfLineNr", { fg = "#41b1b3" })
hi(0, "rainbowcol1", { fg = "#e90018" })
hi(0, "rainbowcol2", { fg = "#d04500" })
hi(0, "rainbowcol3", { fg = "#b58900" })
hi(0, "rainbowcol4", { fg = "#859900" })
hi(0, "rainbowcol5", { fg = "#00a399" })
hi(0, "rainbowcol6", { fg = "#048bda" })
hi(0, "rainbowcol7", { fg = "#e10083" })
hi(0, "rubyAccess", { fg = "#d04500" })
hi(0, "rubyAttribute", { fg = "#b58900" })
hi(0, "rubyBlockParameterList", { fg = "#048bda" })
hi(0, "rubyDefine", { fg = "#e90018", italic = true })
hi(0, "rubyInterpolation", { fg = "#b58900" })
hi(0, "rubyInterpolationDelimiter", { fg = "#b58900" })
hi(0, "rubyKeywordAsMethod", { bold = true, fg = "#859900" })
hi(0, "rubyMacro", { fg = "#e90018", italic = true })
hi(0, "rubyModuleName", { fg = "#e10083" })
hi(0, "rubyStringDelimiter", { fg = "#859900" })
hi(0, "rustAssert", { fg = "#00a399" })
hi(0, "rustDeriveTrait", { fg = "#e10083", italic = true })
hi(0, "rustEnumVariant", { fg = "#e10083" })
hi(0, "rustIdentifier", { fg = "#e10083" })
hi(0, "rustMacroVariable", { fg = "#048bda" })
hi(0, "rustModPath", { fg = "#d04500" })
hi(0, "rustModPathSep", { fg = "#32a1ad" })
hi(0, "rustPanic", { fg = "#00a399" })
hi(0, "rustPubScopeCrate", { fg = "#e10083", italic = true })
hi(0, "rustSelf", { fg = "#048bda" })
hi(0, "rustStructure", { fg = "#d04500" })
hi(0, "rustSuper", { fg = "#048bda" })
hi(0, "shCmdSubRegion", { fg = "#859900" })
hi(0, "shCommandSub", { fg = "#d04500" })
hi(0, "shFunctionKey", { fg = "#e90018", italic = true })
hi(0, "shFunctionOne", { bold = true, fg = "#859900" })
hi(0, "shOperator", { fg = "#d04500" })
hi(0, "shOption", { fg = "#00a399" })
hi(0, "shQuote", { fg = "#859900" })
hi(0, "shRange", { fg = "#32a1ad" })
hi(0, "shSet", { fg = "#d04500" })
hi(0, "shSetList", { fg = "#048bda" })
hi(0, "shSnglCase", { fg = "#d04500" })
hi(0, "shTestOpr", { fg = "#d04500" })
hi(0, "shVarAssign", { fg = "#d04500" })
hi(0, "shVariable", { fg = "#048bda" })
hi(0, "tomlBoolean", { fg = "#00a399" })
hi(0, "tomlKey", { fg = "#d04500" })
hi(0, "tomlTableArray", { link = "tomlTable" })
hi(0, "vimAutoCmdSfxList", { fg = "#00a399" })
hi(0, "vimContinue", { fg = "#41b1b3" })
hi(0, "vimFuncName", { bold = true, fg = "#859900" })
hi(0, "vimFunction", { bold = true, fg = "#859900" })
hi(0, "vimHiBang", { fg = "#d04500" })
hi(0, "vimIsCommand", { fg = "#32a1ad" })
hi(0, "vimLet", { fg = "#d04500" })
hi(0, "vimMap", { fg = "#e10083", italic = true })
hi(0, "vimMapLhs", { fg = "#859900" })
hi(0, "vimMapRhs", { fg = "#859900" })
hi(0, "vimNotation", { fg = "#00a399" })
hi(0, "vimOption", { fg = "#00a399" })
hi(0, "vimSet", { fg = "#b58900" })
hi(0, "vimSetEqual", { fg = "#b58900" })
hi(0, "vimSetSep", { fg = "#41b1b3" })
hi(0, "vimSynType", { fg = "#d04500" })
hi(0, "vimUserAttrb", { fg = "#859900" })
hi(0, "vimUserAttrbKey", { fg = "#b58900" })
hi(0, "vimUserFunc", { bold = true, fg = "#859900" })
hi(0, "yamlConstant", { fg = "#e10083" })
hi(0, "yamlKey", { fg = "#d04500" })
hi(0, "zshDeref", { fg = "#048bda" })
hi(0, "zshFunction", { bold = true, fg = "#859900" })
hi(0, "zshOptStart", { fg = "#e10083", italic = true })
hi(0, "zshOption", { fg = "#048bda" })
hi(0, "zshSubst", { fg = "#b58900" })
hi(0, "zshTypes", { fg = "#d04500" })
hi(0, "zshVariableDef", { fg = "#048bda" })

-- Terminal colors
local g = vim.g

g.terminal_color_0 = "#002b36"
g.terminal_color_1 = "#dc322f"
g.terminal_color_2 = "#859900"
g.terminal_color_3 = "#b58900"
g.terminal_color_4 = "#268bd2"
g.terminal_color_5 = "#d33682"
g.terminal_color_7 = "#839496"
g.terminal_color_8 = "#073642"
g.terminal_color_9 = "#dc322f"
g.terminal_color_10 = "#859900"
g.terminal_color_11 = "#b58900"
g.terminal_color_12 = "#268bd2"
g.terminal_color_13 = "#d33682"
g.terminal_color_15 = "#657b83"
